<Project Sdk="Microsoft.NET.Sdk">

  <!-- 
  Imports silksong path properties only if present in order to allow CI builds. The file should be gitignored.
  If you are checking out from git and need to create a new one, you can use `dotnet new silksongpath` to generate one.
  -->
  <Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RestoreAdditionalProjectSources>
      https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <!--Allow access of private members at runtime.-->
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <!--These properties will control the generated plugin info. Version is also used by various parts of the build system.-->
    <AssemblyTitle>SSTestMod2</AssemblyTitle>
    <Version>0.1.0</Version>
    <BaseOutputPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\BepInEx\plugins_build</BaseOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.1" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\BepInEx\core\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\Assembly-CSharp-firstpass.dll</HintPath>
    </Reference>
    <Reference Include="BepInEx">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\BepInEx\core\BepInEx.dll</HintPath>
    </Reference>
    <Reference Include="GodDance">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\BepInEx\other_plugins\GodDance-521-0-1-1-1759666465\GodDance\GodDance.dll</HintPath>
    </Reference>
    <Reference Include="PlayMaker">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\PlayMaker.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.BuildBot">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.BuildBot.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.Cinematics">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.Cinematics.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.Localization">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.Localization.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.NestedFadeGroup">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.NestedFadeGroup.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.SharedUtils">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.SharedUtils.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.Splines">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.Splines.dll</HintPath>
    </Reference>
    <Reference Include="TeamCherry.TK2D">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\TeamCherry.TK2D.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.Physics2DModule">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.Physics2DModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>D:\SteamLibrary\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>

 

  <Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(SilksongFolder)' != ''">
    <ItemGroup>
      <Binaries Include="$(TargetPath)" />
      <Binaries Include="$(TargetDir)/$(TargetName).pdb" />
    </ItemGroup>

    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)" />

    <PropertyGroup>
      <ExportFolder>bin/Publish</ExportFolder>
    </PropertyGroup>

    <RemoveDir Directories="$(IntermediateOutputPath)/archive" />
    <MakeDir Directories="$(ExportFolder)" />
    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(IntermediateOutputPath)/archive" />
    <ZipDirectory SourceDirectory="$(IntermediateOutputPath)/archive" DestinationFile="$(ExportFolder)/$(TargetName).zip" Overwrite="True" />
  </Target>
	
	
	<!-- Open the output folder after a successful build in Visual Studio (Debug only). -->
	<Target Name="OpenBuildFolder" AfterTargets="Build" Condition="'$(BuildingInsideVisualStudio)' == 'true'&#xD;&#xA;                     and '$(Configuration)' == 'Debug'&#xD;&#xA;                     and '$(IsCrossTargetingBuild)' != 'true'">
		<!-- Open the folder (non-blocking). -->
		<Exec Command="cmd /c start &quot;&quot; &quot;$(TargetDir)&quot;" />
		<!-- Alternative: highlight the built file instead of just opening the folder. -->
		<!-- <Exec Command='cmd /c start "" explorer.exe /select,&quot;$(TargetPath)&quot;' /> -->
	</Target>
	
	
</Project>


